// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  email      String
  name       String
  createdAt  DateTime  @default(now())
  clerkId   String  @unique


  sessions   Session[]
}

model Session {
  id         String     @id @default(uuid())
  userId     String
  startedAt  DateTime   @default(now())
  endedAt    DateTime?

  user       User       @relation(fields: [userId], references: [id])
  histories  History[]
}

model History {
  id         String     @id @default(uuid())
  sessionId  String
  type       String
  score      Int
  createdAt  DateTime   @default(now())
  metadata   Json?
  promptIds  String[] // store which prompts were used in this run


  session    Session    @relation(fields: [sessionId], references: [id])
}


model Prompt {
  id          String   @id @default(uuid())
  type        PromptType @default(KATAKANA) // future-proof: grammar, vocab, kana, etc.
  question    String // the katakana or phrase shown
  answer      String // correct romaji or meaning
  explanation String? // optional: why this is the correct answer
  level       String? // N5, N4, etc.
  tags        String[] // ["loanword", "place", "tech"] â€” could help you filter
  createdAt   DateTime @default(now())
}


enum PromptType {
  KATAKANA
  MEANING
  GRAMMAR
  FILL_IN_THE_BLANK
}

